"""

파이썬 들여쓰기

- 파이썬의 들여쓰기는 단순한 가독성을 위한 것이 아니라 구문을 인식하기 위한 문법으로 사용한다.
- 블럭을 구분하기 위한 용도로 사용한다.
- 들여쓰기 방법은 공백, 탭 등 여러가지 방법을 사용한다.



PEP 8

- Program Enhance Proposal
- 파이썬 코딩 스타일 가이드

1. Code lay-out
    - 들여쓰기는 공백 4칸을 권장하고 있다.
    - 한 줄은 최대 79자 까지
    - 최상위 함수와 클래스 정의는 2줄씩 띄어 쓴다.
    - 클래스 내의 메소드 정의는 1줄씩 띄어 쓴다.

2. Whitespace in Expressions and Statements
    - 아래 같은 상황에서는 불필요한 공백을 피한다.
        a. 대괄호([])와 소괄호(())의 시작과 끝
        b. 쉼표(,)와 콜론(:)과 세미콜론(;)의 앞
    - 키워드와 인자의 초기값의 = 은 공백없이 붙여쓴다.

3. Comments
    - 코드와 모순되는 주석은 안 좋다. 항상 코드에 따른 갱신을 한다.
    - 한 줄 주석은 신중히 단다.

4. Naming Conventions
    - 변수명의 _는 위치에 따라 다음과 같은 의미가 있다.
        a. _single_leading_underscore: 내부적으로 사용되는 변수를 일컫습니다.
        b. single_trailing_underscore_: 파이썬 기본 키워드와 충돌을 피하려고 사용합니다.
        c. __double_leading_underscore: 클래스 속성으로 사용되면 그 이름을 변경합니다. (ex. FooBar에 정의된 __boo는 _FooBar__boo로 바뀝니다.)
        d. __double_leading_and_trailing_underscore__: 마술(magic)을 부리는 용도로 사용되거나 사용자가 조정할 수 있는 네임스페이스 안의 속성을 뜻합니다. 이런 이름을 새로 만들지 마시고 오직 문서대로만 사용하세요.
    - 소문자 L, 대문자 O, 대문자 I는 변수명으로 사용하지 않는다.
    - 모듈명은 짧은 소문자로 구성하고 필요하면 밑줄을 사용한다.
        a. 모듈을 파이썬 파일이기 때문에 OS 파일 시스템에 영향을 받는다.
        b. C/C++ 확장 모듈을 밑줄로 시작한다.
    - 클래스명은 캐멀 표기법을 사용한다.
        a. 단 내부 클래스는 밑줄로 시작한다.
        b. 예외는 실제 에러인 경우 "Error"를 뒤에 붙인다.
    - 함수명은 소문자로 구성하되 필요하면 밑줄을 사용한다.
        a. 대문자를 섞어도 되지만 되도록 소문자로만 구성한다.
    - 객체 메소드의 첫번째 인자는 반드시 self 이다.
    - 클래스 메소드의 첫번째 인자는 반드시 cls 이다.
    - 메소드명은 함수명과 같지만, 비공개 메소드이면 밑줄로 시작한다.
    - 서브 클래스는 이름 충돌을 막기 위해 밑줄 2개로 시작한다.
    - 상수는 모듈 단위에서만 사용하며, 모두 대문자를 사용하고 필요하면 밑줄도 사용한다.

5. Programming Recommendations
    - 코드는 되도록 어떤 환경에서도 동작되게 작성한다.(PyPy, Jython, IronPython 등)
    - None을 비교할 때는 is나 is not 만을 사용한다.(== 사용 금지)??
    - 클래스 기반의 예외를 사용한다.??
    - raise ValueError('message')가 (예전에 쓰이던) raise ValueError, 'message' 보다 낫다.??
    - 예외를 except:로 잡기보단 명확히 예외를 명시합니다.(ex. except ImportError:)??
    - try: 블록의 코드는 필요한 것만 최소한으로 작성한다.
    - string 모듈보다는 string 메소드를 사용한다. 메소드는 모듈보다 더 빠르고, 유니코드 문자열에 대해 같은 API를 공유한다.
    - 접두사나 접미사를 검사할 때는 startswith()와 endwith()를 사용한다.
    - 객체의 타입을 비교할 때는 isinstance()를 사용한다.
    - 빈 시퀀스(문자열, 리스트(list), 튜플(tuple))는 조건문에서 거짓(false)이다.
    - 불린형(boolean)의 값을 조건문에서 ==를 통해 비교하지 마라.
        
    

"""